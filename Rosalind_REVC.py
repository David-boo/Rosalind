# Code on Python 3.7.4
# Working @ Dec, 2020
# david-boo.github.io 

# The reverse complementary of a DNA string is made by getting the reverse (ie: changing the order of the whole string, starting from the end) and then, changing nucleotides to make the complement (C->G, A->T)

string='CATTCACCTCCTTAAGGATCATTGTCTTTATCAGTCGAAGCACCAAGGTTCCGTAAGAGAAGGGCCGCGGGGGTGTTCCTAACGTCGGACCGCCCAAGTCTTAGGACCGGTCGAACTCATGTCCGGCACCCGAAGCAGGCCGCACTTGAAATGAGTGGGGGTTTTGTATTCGTGAGGGAGGTCGGAAGCTCGAATGCACTCCGATTATCTACTATGATACGGCACGTCCGAGCCCGTATGAATGTTTCTAAGCTCTCTATGACTGATCAAGAAGCAGTTGCTTCCGAGTGTACGAGAAGCGAGCAGTGAAGATGGTAGGTATGTTTCTTAGAGGTAAACCCATCTTTAGCCGGTTTTGCACATCAGTCTTAACCAGACCAACGTTGGCTGTACAGCGTTTTTAATCACAGAGATGGAGCCCCATTCTGGGTCTCCCATCTAGCCTTCATAAGACCTGCTCTAAGATCTCGGAGCGACATTCCGGTAATAGAAGGTAGACTTAACCATGAGACGTTTCGTGATATAGTAGGATCTTTAAACTCGCCATCAGCGGACAAATACCCTGCTAAGAAAAAAAGGCCAACGGAAGGTGGCGTATGAAGCGCCAGTTTATTTAAGCCACATCAGGGTACCCGCTCCTCACGGTGTGGGCACCCCCATTGGAAAAGAATCATGCCTATTGGACGTAAACTCTAGCTCTGACTTATAAGGGCCAATGGCTCCAACCGGGTTCTCACTCCAAAGAATCTATGCAGCGATTCGACCGCATCTTGTGGAATAAATAGCCCCCGTTCAGAAGAGTCTAAAACCAAGCTATACAATTCCAAACATTTCGTATCCTGCAGCATCGTTGCCACGCAACTTGTCATTGGGGGATAATGCGGCC'
reverse=string[::-1]

# We have the reverse. Now, a small if loop will help us to get the complementary. Create a variable to store it and just change from A to T and so on.

# Note that on last nucleotide you choose, you can just else and name it as the complementary (in my case, last nucleotide change needed was C to G and I just called everything that was not T,A,G as a C).

scomp=''
for n in reverse:
    if n == 'A':
        scomp+='T'
    elif n == 'T':
        scomp+='A'
    elif n == 'G':
        scomp+='C'
    else:
        scomp+='G'
print(scomp)
